syntax = "proto3";

package Certificate;

service CertificateService {
  // Creates a new generic certificate in the database
  rpc CreateCertificate (CertificateData) returns (CertificateData) {}

  // Issues a certificate to a user & adds it to the blockchain
  rpc IssueCertificate (UserCertificateData) returns (UserCertificateData) {}

  // Retrieves all certificates owned by a specific user
  rpc GetUserCertificates (UserId) returns (UserCertificateList) {}
}

// Message representing a generic certificate
message CertificateData {
  string id = 1;
  string name = 2;
  string courseId = 3;
  string validityPeriod = 4;
  string description = 5;
  string additionalInfo = 6;
}

// Message representing a user-issued certificate
message UserCertificateData {
  string id = 1;    // Unique ID of the issued certificate (from user_cert table)
  string userId = 2;        // Matches user_id in the database
  string certificateId = 3; // Matches cert_id in the database
  string issuedOn = 4;      // Date when the certificate was issued
  string expiresOn = 5;     // Expiration date (nullable)
  string additionalInfo = 6;// JSON metadata (optional)
}

// List of user certificates
message UserCertificateList {
  repeated UserCertificateData userCertificates = 1;
}

// Request messages
message UserId {
  string userId = 1;
}

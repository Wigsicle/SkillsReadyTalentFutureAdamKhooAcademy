"""Create DB

Revision ID: 6bfbe538f7b0
Revises: 
Create Date: 2025-03-08 23:39:43.220255

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6bfbe538f7b0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.Column('short_val', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('details', sa.String(length=255), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.Column('cert_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.ForeignKeyConstraint(['user_type_id'], ['user_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('total_marks', sa.Float(), nullable=False),
    sa.Column('question_paper', sa.JSON(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('certificate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('validity_period', sa.Time(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cleared', sa.Boolean(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_listing',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('monthly_salary', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('available_spot_count', sa.Integer(), nullable=False),
    sa.Column('pay', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('employment_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['employment_type_id'], ['employment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('applied_on', sa.DateTime(), nullable=False),
    sa.Column('edited_on', sa.DateTime(), nullable=True),
    sa.Column('resume_link', sa.String(length=255), nullable=False),
    sa.Column('additional_info', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('industry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['industry_id'], ['industry.id'], ),
    sa.ForeignKeyConstraint(['listing_id'], ['job_listing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('earned_marks', sa.Float(), nullable=True),
    sa.Column('attempted_on', sa.DateTime(), nullable=False),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_cert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issued_on', sa.DateTime(), nullable=False),
    sa.Column('expires_on', sa.DateTime(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cert_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cert_id'], ['certificate.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_cert')
    op.drop_table('assessment_attempt')
    op.drop_table('application')
    op.drop_table('job_listing')
    op.drop_table('course_progress')
    op.drop_table('certificate')
    op.drop_table('assessment')
    op.drop_table('user')
    op.drop_table('course')
    op.drop_table('company')
    op.drop_table('user_type')
    op.drop_table('industry')
    op.drop_table('employment_type')
    op.drop_table('country')
    # ### end Alembic commands ###
